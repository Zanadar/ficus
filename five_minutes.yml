---
- hosts: all
  vars:
    common_deploy_user_name: deploy

    common_required_packages:
      - ufw
      - fail2ban
      - unattended-upgrades
      - logwatch

    common_optional_packages:
      - vim

    common_ssh_port: 22

  handlers:
    - name: Restart ssh
      service: name=ssh state=restarted

  tasks:
    - name: Change root password
      user: name=root password="{{ lookup('env', 'COMMON_ROOT_PASSWORD') }}"
    - name: Add deploy user
      user: name={{ common_deploy_user_name }} password="{{ lookup('env', 'COMMON_DEPLOY_PASSWORD') }}" shell=/bin/bash
    - name: Add authorized keys for deploy user
      authorized_key: user={{ common_deploy_user_name }}
                      key="{{ lookup('env', 'DEPLOY_SSH_PUBLIC_KEY' ) }}"
    - name: Add deploy user to sudoers
      lineinfile: dest=/etc/sudoers
                  regexp="{{ common_deploy_user_name }} ALL"
                  line="{{ common_deploy_user_name }} ALL=(ALL) ALL"
                  state=present
    - name: Update APT package cache
      apt: update_cache=yes cache_valid_time=3600
    - name: Upgrade APT to the latest packages
      apt: upgrade=safe
    - name: Install required packages
      apt: state=present pkg={{ item }}
      with_items: "{{ common_required_packages }}"
    - name: Adjust APT update intervals
      copy: src=apt_periodic dest=/etc/apt/apt.conf.d/10periodic
    - name: Setup ufw
      ufw: state=enabled policy=deny
    - name: Allow ssh traffic
      ufw: rule=allow port={{ common_ssh_port }} proto=tcp
    - name: Set up Postfix to relay mail
      debconf: name=postfix
               question='{{ item.question }}'
               value='{{ item.value }}'
               vtype='{{ item.vtype }}'
      with_items:
        - { question: 'postfix/mailname', value: '{{ ansible_fqdn }}', vtype: 'string' }
        - { question: 'postfix/main_mailer_type', value: 'Internet Site', vtype: 'string' }
    - name: Email log summary daily
      lineinfile: dest=/etc/cron.daily/00logwatch
                  regexp="^/usr/sbin/logwatch"
                  line="/usr/sbin/logwatch --output mail --mailto {{ lookup('env', 'COMMON_LOGWATCH_EMAIL') }} --detail high"
                  state=present create=yes
    - name: Disallow password authentication
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^PasswordAuthentication"
                  line="PasswordAuthentication no"
                  state=present
      notify: Restart ssh
    - name: Disallow root SSH access
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^PermitRootLogin"
                  line="PermitRootLogin no"
                  state=present
      notify: Restart ssh
